package com.fengxing.mcp.fdialog;import android.app.FragmentManager;import android.content.DialogInterface;import android.content.Loader;import android.graphics.Rect;import android.graphics.drawable.Drawable;import android.support.annotation.IdRes;import android.util.Log;import android.view.View;/** * Created by fengxing on 2018/5/8. */public class FDialog extends BaseDialogFragment {    private FController fController;    public FDialog() {        fController = FController.create();    }    @Override    protected View getDialogView() {        return null;    }    @Override    protected int getResLayout() {        return fController.getResLayout();    }    @Override    protected void bindView(View view) {        BindViewHolder bindViewHolder = new BindViewHolder(view, this);        int[] resIds = fController.getResIds();        for (int i = 0; i < resIds.length; i++) {            bindViewHolder.addOnClickListener(resIds[i]);        }        if (fController.onBindViewListener != null) {            fController.onBindViewListener.bindView(bindViewHolder);        }    }    public OnViewClickListener getOnViewClickListener() {        return fController.onViewClickListener;    }    public void show(FragmentManager fragmentManager, String tag) {        onShow(getDialog());        super.show(fragmentManager, tag);    }    @Override    public void onShow(DialogInterface dialog) {        Log.d("fx", "onShow: ");    }    @Override    public float getAlpha() {        return fController.getAlpha();    }    @Override    public boolean getCanceledOnTouchOutside() {        return fController.isCancelOutside();    }    @Override    public float getWidth() {        return fController.getWidth();    }    @Override    public float getHeight() {        return fController.getHeight();    }    @Override    public float getDimAmount() {        return fController.getDimAmount();    }    @Override    public int getY() {        return fController.getY();    }    @Override    public int getX() {        return fController.getX();    }    @Override    public int getAnimationStyle() {        return fController.getAnimationStyle();    }    @Override    public boolean getCancelable() {        return fController.isCancelable();    }    @Override    public int getGravity() {        return fController.getGravity();    }    public static class Builder {        private final FController.Params params;        public Builder() {            params = new FController.Params();        }        /**         * 设置自定义view         *         * @param view         * @return         */        public Builder setView(View view) {            params.view = view;            return this;        }        public Builder isCancelable(boolean isCancelable) {            params.isCancelable = isCancelable;            return this;        }        public Builder isCancelOutside(boolean isCancelOutside) {            params.isCancelOutside = isCancelOutside;            return this;        }        public Builder setBackGroundDrawable(Drawable backGroundDrawable) {            params.backGroundDrawable = backGroundDrawable;            return this;        }        public Builder setAlpha(float alpha) {            params.alpha = alpha;            return this;        }        public Builder setDimAmount(float dimAmount) {            params.dimAmount = dimAmount;            return this;        }        public Builder setWidth(float width) {            params.width = width;            return this;        }        public Builder setHeight(float height) {            params.height = height;            return this;        }        public Builder setResLayout(int resLayout) {            params.resLayout = resLayout;            return this;        }        public Builder setResIds(@IdRes int... ids) {            params.resIds = ids;            return this;        }        public Builder setGravity(int gravity) {            params.gravity = gravity;            return this;        }        public Builder setAnimationStyle(int animationStyle) {            params.animationStyle = animationStyle;            return this;        }        public Builder setX(int x) {            params.x = x;            return this;        }        public Builder setY(int y) {            params.y = y;            return this;        }        public Builder setOnViewClickListener(OnViewClickListener onViewClickListener) {            params.onViewClickListener = onViewClickListener;            return this;        }        public Builder setOnBindViewListener(OnBindViewListener onBindViewListener) {            params.onBindViewListener = onBindViewListener;            return this;        }        public FDialog create() {            FDialog fDialog = new FDialog();            params.apply(fDialog.fController);            return fDialog;        }    }}